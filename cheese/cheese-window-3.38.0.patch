--- a/src/cheese-window.vala
+++ b/src/cheese-window.vala
@@ -54,27 +54,27 @@
     private GLib.Settings settings;
 
     [GtkChild]
-    private GtkClutter.Embed viewport_widget;
+    private unowned GtkClutter.Embed viewport_widget;
     [GtkChild]
-    private Gtk.Widget main_vbox;
+    private unowned Gtk.Widget main_vbox;
     private Eog.ThumbNav thumb_nav;
     private Cheese.ThumbView thumb_view;
     [GtkChild]
-    private Gtk.Box thumbnails_right;
+    private unowned Gtk.Box thumbnails_right;
     [GtkChild]
-    private Gtk.Box thumbnails_bottom;
+    private unowned Gtk.Box thumbnails_bottom;
     [GtkChild]
-    private Gtk.Widget leave_fullscreen_button_box;
+    private unowned Gtk.Widget leave_fullscreen_button_box;
     [GtkChild]
-    private Gtk.Button take_action_button;
+    private unowned Gtk.Button take_action_button;
     [GtkChild]
-    private Gtk.Image take_action_button_image;
+    private unowned Gtk.Image take_action_button_image;
     [GtkChild]
-    private Gtk.ToggleButton effects_toggle_button;
+    private unowned Gtk.ToggleButton effects_toggle_button;
     [GtkChild]
-    private Gtk.Widget buttons_area;
+    private unowned Gtk.Widget buttons_area;
     [GtkChild]
-    private Gtk.Button switch_camera_button;
+    private unowned Gtk.Button switch_camera_button;
     private Gtk.Menu thumbnail_popup;
 
     private Clutter.Stage viewport;
@@ -123,14 +123,8 @@
         GLib.Object (application: application);
 
         header_bar = header_bar_ui.get_object ("header_bar") as Gtk.HeaderBar;
-
-        Gtk.Settings settings = Gtk.Settings.get_default ();
-
-        if (settings.gtk_dialogs_use_header)
-        {
-            header_bar.visible = true;
-            this.set_titlebar (header_bar);
-        }
+        header_bar.visible = true;
+        this.set_titlebar (header_bar);
     }
 
     private void set_window_title (string title)
@@ -1216,9 +1210,9 @@
    */
   public void on_switch_camera_clicked ()
   {
-      Cheese.CameraDevice selected;
-      Cheese.CameraDevice next = null;
-      GLib.PtrArray cameras;
+      unowned Cheese.CameraDevice selected;
+      unowned Cheese.CameraDevice next = null;
+      GLib.GenericArray<unowned Cheese.CameraDevice> cameras;
       uint i;
 
       if (camera == null)
@@ -1235,9 +1229,9 @@
 
       cameras = camera.get_camera_devices ();
 
-      for (i = 0; i < cameras.len; i++)
-      {
-          next = (Cheese.CameraDevice )cameras.index (i);
+      for (i = 0; i < cameras.length; i++)
+      {
+          next = cameras.get (i);
 
           if (next == selected)
           {
@@ -1245,13 +1239,13 @@
           }
       }
 
-      if (i + 1 < cameras.len)
-      {
-          next = (Cheese.CameraDevice )cameras.index (i + 1);
+      if (i + 1 < cameras.length)
+      {
+          next = cameras.get (i + 1);
       }
       else
       {
-          next = (Cheese.CameraDevice )cameras.index (0);
+          next = cameras.get (0);
       }
 
       if (next == selected)
@@ -1269,8 +1263,8 @@
    */
   public void set_switch_camera_button_state ()
   {
-      Cheese.CameraDevice selected;
-      GLib.PtrArray cameras;
+      unowned Cheese.CameraDevice selected;
+      GLib.GenericArray<unowned Cheese.CameraDevice> cameras;
 
       if (camera == null)
       {
@@ -1288,7 +1282,7 @@
 
       cameras = camera.get_camera_devices ();
 
-      if (cameras.len > 1)
+      if (cameras.length > 1)
       {
          switch_camera_button.set_visible (true);
          return;

